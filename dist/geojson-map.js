!function(t,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.geoJsonMap=o():t.geoJsonMap=o()}(this,function(){return function(t){function o(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,o),i.loaded=!0,i.exports}var n={};return o.m=t,o.c=n,o.p="",o(0)}([function(t,o,n){function r(t,o){return new e(i(t),o)}var i=n(1),e=n(2);r.MERCATOR=0,t.exports=r},function(t,o){function n(t,o){for(var n,r,i=[],e=o.slice(),a=0,s=t.length;a<s;a+=2)n=t.charCodeAt(a)-64,r=t.charCodeAt(a+1)-64,n=(n>>1^-(1&n))+e[0],r=(r>>1^-(1&r))+e[1],e[0]=n,e[1]=r,i.push([n/1024,r/1024]);return i}function r(t){var o={MultiPolygon:function(t,o){return t.map(function(t,r){return n(t,o[r])})},Polygon:n},r=[];if("string"==typeof t&&(t=JSON.parse(t)),r=t.features,!t.UTF8Encoding)return t;for(var i=0,e=r.length;i<e;i++){var a=r[i].geometry,s=a.coordinates,c=a.encodeOffsets;s.forEach(function(t,n){s[n]=o[a.type](t,c[n])})}return t.UTF8Encoding=!1,t}function i(t,o,n){if(this.name=t,this.contours=o,!n){var r=this.getBoundingRect();n=[(r.xMin+r.xMax)/2,(r.yMin+r.yMax)/2]}this.center=n}i.prototype.getBoundingRect=function(){var t=Number.MAX_VALUE,o=function(o){var n=[t,t],r=[-t,-t];return o.forEach(function(t){n[0]=Math.min(n[0],t[0]),r[0]=Math.max(r[0],t[0]),n[1]=Math.min(n[1],t[1]),r[1]=Math.max(r[1],t[1])}),{xMin:n[0],yMin:n[1],xMax:r[0],yMax:r[1]}},n={xMin:t,yMin:t,xMax:-t,yMax:-t};return this.contours.forEach(function(t){t.forEach(function(t){var r=o(t);n.xMin=Math.min(n.xMin,r.xMin),n.xMax=Math.max(n.xMax,r.xMax),n.yMin=Math.min(n.yMin,r.yMin),n.yMax=Math.max(n.yMax,r.yMax)})}),n},t.exports=function(t){var o=r(t),n=o.features.filter(function(t){return t.properties&&t.geometry&&t.geometry.coordinates.length>0});return n.map(function(t){var o=t.geometry,n=o.coordinates;return"Polygon"===o.type&&(n=n.map(function(t){return[t]})),new i(t.properties.name,n,t.properties.cp)})}},function(t,o,n){function r(t,o){this.regions=[],this.options={},this.markers=[],this.context=o.el.getContext("2d"),o.projection||(o.projection={type:i.MERCATOR,zoom:0}),Object.assign(this.options,o,{projection:new i(o.projection.type,{zoom:o.projection.zoom,width:o.el.width,height:o.el.height}),regions:t});for(var n=this.getBoundingRect(),r=this.options.projection,e=0,a=t.length;e<a;e++){var s=[],c=t[e].contours;s.center=r.coordinateToPoint(t[e].center,n),this.markers.push({point:s.center,label:t[e].name});for(var h=0,x=c.length;h<x;h++)for(var p=0,f=c[h].length;p<f;p++)s.push(c[h][p].map(function(t){return r.coordinateToPoint(t,n)}));this.regions.push(s)}if(this.options.markers&&Array.isArray(this.options.markers.data)){var u=this.options.markers.data.filter(function(t){return"object"==typeof t&&t.point&&"number"==typeof t.point.x&&"number"==typeof t.point.y});this.markers=this.markers.concat(u)}}var i=n(3);r.prototype.render=function(){var t=this.regions,o=this.context,n=Object.assign({color:"black",backgroundColor:"transparent"},this.options.style),r=this.options.markers;if(o.save(),o.strokeStyle=n.color,o.fillStyle=n.backgroundColor,t.forEach(function(t){t.forEach(function(t,n){o.beginPath(),o.moveTo(t[0].x,t[0].y);for(var r=1,i=t.length;r<i;r++)o.lineTo(t[r].x,t[r].y);o.stroke(),o.fill()})}),r&&r.show){var n=Object.assign({width:2,height:2,fontSize:12,fontFamily:"courier",color:"blue",backgroundColor:"red"},r.style);o.font=n.fontSize+"px "+n.fontFamily,this.markers.forEach(function(t){var i=t.point.x,e=t.point.y;"marker"!==r.show&&r.show!==!0||(o.fillStyle=n.backgroundColor,o.beginPath(),o.arc(i,e,Math.min(n.width,n.height),0,2*Math.PI),o.fill()),("label"===r.show&&"string"==typeof t.label||r.show===!0)&&(o.fillStyle=n.color,o.fillText(t.label,i+4,e+n.fontSize/2))})}o.restore()},r.prototype.resize=function(t,o){},r.prototype.getBoundingRect=function(){for(var t,o,n=Number.MAX_VALUE,r=this.options.regions,i=this.options.projection.transform,e={xMin:n,yMin:n,xMax:-n,yMax:-n},a=0,s=r.length;a<s;a++){var c=r[a].getBoundingRect();t=i([c.xMin,c.yMin]),o=i([c.xMax,c.yMax]),e.xMin=e.xMin<t.x?e.xMin:t.x,e.yMin=e.yMin<t.y?e.yMin:t.y,e.xMax=e.xMax>o.x?e.xMax:o.x,e.yMax=e.yMax>o.y?e.yMax:o.y}return e},t.exports=r},function(t,o){function n(t,o){this.transform=r[t],this.options=o}var r={};n.MERCATOR=1,r[n.MERCATOR]=function(t,o){var n={};return o=Object.assign({radius:6378137,max:85.0511287798,radians:Math.PI/180},o),n.x=o.radius*t[0]*o.radians,n.y=Math.max(Math.min(o.max,t[1]),-o.max),n.y=n.y*o.radians,n.y=o.radius*Math.log(Math.tan(Math.PI/4+n.y/2)),n},n.prototype.projectCoordinate=function(t){var o=this.transform(t),n=Math.pow(2,parseInt(this.options.zoom,10));return o.x=o.x*n,o.y=o.y*n,o},n.prototype.coordinateToPoint=function(t,o){var n=this.projectCoordinate(t),r=Math.abs(o.xMax-o.xMin),i=Math.abs(o.yMax-o.yMin),e=this.options.width/r,a=this.options.height/i;return e<a?(n.x=(n.x-o.xMin)*e,n.y=(o.yMax-n.y)*e,n.y+=(this.options.height-i*e)/2):(n.x=(n.x-o.xMin)*a,n.x+=(this.options.width-r*a)/2,n.y=(o.yMax-n.y)*a),n},t.exports=n}])});